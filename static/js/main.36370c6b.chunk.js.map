{"version":3,"sources":["Components/Pokeball.js","Api/apiGen.js","Components/MovesView.js","Components/PokemonView.js","Components/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["Pokeball","className","localforage","config","driver","INDEXEDDB","WEBSQL","LOCALSTORAGE","name","CACHE_PREFIX","axios","Axios","create","baseURL","headers","Accept","apiRequest","url","Promise","resolve","reject","ready","then","getItem","res","remoteApiRequest","catch","e","err","a","get","status","console","log","setItem","data","apiGen","id","replace","MovesList","props","list","moves","map","move","MovesView","filtered_moves_list","filter","version_group_details","find","version_group","level_up_moves_list","move_learn_method","egg_moves_list","tutor_moves_list","machine_moves_list","PokemonView","pm_id","useParams","pm","pms_detail","parseInt","length","useState","abilities_info","setAbility_info","abilities","ability","useEffect","getAbility","all","ab","getAbilityByName","error","run","to","style","position","top","left","zIndex","icon","faTimes","src","sprites","front_default","alt","height","weight","types","PokemonAbility","effect_entries","entry","language","short_effect","TypeView","type_detail","setType","getType","type","getTypeByName","DamageRelationsView","double_from","damage_relations","double_damage_from","double_to","double_damage_to","half_from","half_damage_from","half_to","half_damage_to","zero_from","no_damage_from","zero_to","no_damage_to","PokemonList","pmList","species","path","nationalPMDexCount","promiseGenfetchPokemon","offset","pmPromises","Array","from","_","i","push","getPokemonByName","App","pm_list","pms","setPMs","searchField","setSearchField","response","placeholder","onChange","target","value","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36370c6b.chunk.js","sourcesContent":["const Pokeball = () => {\n  return (\n    <div className=\"pokeball\">\n      <div className=\"upside\"></div>\n      <div className=\"downside\"></div>\n      <span></span>\n    </div>\n  );\n};\n\nexport default Pokeball;\n","import Axios from \"axios\";\nimport localforage from \"localforage\";\n\n// Reference URL: https://github.com/ShinteiMai/react-pokedex/blob/965b64f8e1ca0bcc8780a6d865cf672a8e408a54/src/api/axios.ts\n\nlocalforage.config({\n  driver: [localforage.INDEXEDDB, localforage.WEBSQL, localforage.LOCALSTORAGE],\n  name: \"pokeapi_db\",\n});\n\nconst CACHE_PREFIX = \"pokeapi\";\n\nconst axios = Axios.create({\n  baseURL: \"https://pokeapi.co/api/v2\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nconst apiRequest = (url) => {\n  return new Promise((resolve, reject) => {\n    localforage\n      .ready()\n      .then(() => {\n        localforage\n          .getItem(`${CACHE_PREFIX}${url}`)\n          .then((res) => {\n            if (res === null) {\n              remoteApiRequest(url)\n                .then((res) => {\n                  resolve(res);\n                })\n                .catch((e) => {\n                  reject(e);\n                });\n            } else {\n              resolve(res);\n            }\n          })\n          .catch((err) => {\n            remoteApiRequest(url)\n              .then((res) => {\n                resolve(res);\n              })\n              .catch((e) => {\n                reject(e);\n              });\n          });\n      })\n      .catch((err) => {\n        remoteApiRequest(url)\n          .then((res) => {\n            resolve(res);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      });\n  });\n};\n\nconst remoteApiRequest = async (url, retries = 1) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        if (res.status >= 400) {\n          console.log(`${url}/`);\n          axios\n            .get(`${url}/`)\n            .then((res) => {\n              localforage.setItem(`${CACHE_PREFIX}${url}`, res.data);\n              resolve(res.data);\n            })\n            .catch((e) => {\n              reject(e);\n            });\n        } else {\n          localforage.setItem(`${CACHE_PREFIX}${url}`, res.data);\n          resolve(res.data);\n        }\n      })\n      .catch((e) => {\n        console.log(`${url}/`);\n        axios\n          .get(`${url}/`)\n          .then((res) => {\n            localforage.setItem(`${CACHE_PREFIX}${url}`, res.data);\n            resolve(res.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      });\n  });\n};\n\nclass apiGenerator {\n  getPokemonByName(id) {\n    return apiRequest(`/pokemon/${id}`);\n  }\n\n  getAbilityByName(id) {\n    return apiRequest(`/ability/${id}`);\n  }\n\n  getTypeByName(id) {\n    return apiRequest(`/type/${id}`);\n  }\n\n  stripRawUrl(url) {\n    return url.replace(\"https://pokeapi.co/api/v2/\", \"\");\n  }\n}\n\nconst apiGen = new apiGenerator();\nexport default apiGen;\n","// Moves View should contain these info:\n// List of moves with 4 groups:\n// Level-Up, Egg, TM/TR, Tutor\n//\n// Each move should have these info:\n// Name, type, damage class (physical special), power, PP, priority, description\n// + special effects, description in details.\n\nconst MovesView = (props) => {\n  let moves = props.moves;\n  // Each generation will have different move sets for a pokemon\n  // Need to filter the correct generation first\n  const filtered_moves_list = moves.filter((move) =>\n    move.version_group_details.find(\n      ({ version_group }) => version_group.name === \"ultra-sun-ultra-moon\"\n    )\n  );\n\n  // TODO: to see if we can have some factory function to generate these four lists\n  const level_up_moves_list = filtered_moves_list.filter((move) =>\n    move.version_group_details.find(\n      ({ move_learn_method }) => move_learn_method.name === \"level-up\"\n    )\n  );\n\n  const egg_moves_list = filtered_moves_list.filter((move) =>\n    move.version_group_details.find(\n      ({ move_learn_method }) => move_learn_method.name === \"egg\"\n    )\n  );\n\n  const tutor_moves_list = filtered_moves_list.filter((move) =>\n    move.version_group_details.find(\n      ({ move_learn_method }) => move_learn_method.name === \"tutor\"\n    )\n  );\n\n  const machine_moves_list = filtered_moves_list.filter((move) =>\n    move.version_group_details.find(\n      ({ move_learn_method }) => move_learn_method.name === \"machine\"\n    )\n  );\n\n  return (\n    <div>\n      <p>=====LEVEL UP======</p>\n      <MovesList moves={level_up_moves_list}></MovesList>\n      <p>=====EGG=====</p>\n      <MovesList moves={egg_moves_list}></MovesList>\n      <p>=====TM/TR=====</p>\n      <MovesList moves={machine_moves_list}></MovesList>\n      <p>=====TUTOR=====</p>\n      <MovesList moves={tutor_moves_list}></MovesList>\n    </div>\n  );\n};\n\nconst MovesList = (props) => {\n  const list = props.moves.map((move) => (\n    <p key={move.move.name}>{move.move.name}</p>\n  ));\n  return <div>{list}</div>;\n};\n\nexport default MovesView;\n","import { useState, useEffect } from \"react\";\nimport \"../Resources/iconfont.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport apiGen from \"../Api/apiGen\";\n\nimport { Link } from \"react-router-dom\";\nimport MovesView from \"./MovesView\";\n\n// Show: Sprites, Name, ID, types, weight, height, abilities.\nexport const PokemonView = (props) => {\n  const { pm_id } = useParams();\n  let pm = props.pms_detail.filter(pm => parseInt(pm.id)===parseInt(pm_id));\n  if (pm.length === 1) {\n    pm = pm[0];\n  }\n\n  const [abilities_info, setAbility_info] = useState();\n\n  const abilities = pm.abilities.map((ability) => (\n    <p key={ability.ability.name}>{ability.ability.name}</p>\n  ));\n\n\n\n  // const showAbilitiesDetail = () => {\n  //   console.log(\"HOVER\")\n  //   return (\n  //   <div>\n  //     {!abilities_info && \"LOADING....\"}\n  //     {abilities_info && <PokemonAbility ab={abilities_info}/>}\n  //   </div>\n  //   )\n  // }\n\n  useEffect(() => {\n    const getAbility = async () => {\n      return Promise.all(\n        pm.abilities.map((ab) => apiGen.getAbilityByName(ab.ability.name))\n      );\n    };\n\n    async function run() {\n      try {\n        let res = await getAbility();\n        setAbility_info(res);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    run();\n  }, [pm.abilities]);\n\n  return (\n    <div className=\"pm_info_full\">\n      <Link\n        to=\"/pokemon\"\n        style={{ position: \"fixed\", top: \"7%\", left: \"3%\", zIndex: 11 }}\n      >\n        <FontAwesomeIcon icon={faTimes} />\n      </Link>\n\n      <img src={pm.sprites.front_default} alt={pm.name}></img>\n      <table>\n        <tr>\n          <td>ID:</td>\n          <td>{pm.id}</td>\n        </tr>\n        <tr>\n          <td>Name:</td>\n          <td>{pm.name}</td>\n        </tr>\n        <tr>\n          <td>Height:</td>\n          <td>{pm.height}</td>\n        </tr>\n        <tr>\n          <td>Weight:</td>\n          <td>{pm.weight}</td>\n        </tr>\n        <tr>\n          <td>Types:</td>\n          <td>\n            <TypeView types={pm.types}></TypeView>\n          </td>\n        </tr>\n        <tr>\n          <td>Abilities:</td>\n          <td className=\"Abilities\">{abilities}</td>\n          <td className=\"Abilities_full\">\n            {!abilities_info && \"LOADING....\"}\n            {abilities_info && <PokemonAbility ab={abilities_info} />}\n          </td>\n        </tr>\n        <tr>\n          <td>Moves:</td>\n          <td className=\"moves\">\n            <MovesView moves={pm.moves}></MovesView>\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n};\n\nexport const PokemonAbility = ({ ab }) => {\n  const abilities = ab.map((ability) => {\n    return ability.effect_entries\n      .filter((entry) => entry.language.name === \"en\")\n      .map((entry) => (\n        <li key={`ability-${entry.name}`}>{entry.short_effect}</li>\n      ));\n  });\n  return (\n    <div className=\"pm_ability\">\n      <ul key={`abilities-ul`}>{abilities}</ul>\n    </div>\n  );\n};\n\nexport const TypeView = (props) => {\n  const types = props.types;\n\n  const [type_detail, setType] = useState();\n\n  useEffect(() => {\n\n    const getType = async () => {\n      return Promise.all(\n        types.map((type) => apiGen.getTypeByName(type.type.name))\n      );\n    };\n\n    async function run() {\n      try {\n        let res = await getType();\n        setType(res);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    run();\n  }, [types]);\n\n  return (\n    <div>\n      {!type_detail &&\n        types.map((type) => <p key={type.type.name}>{type.type.name}</p>)}\n      {type_detail &&\n        type_detail.map((type) => {\n          return (\n            <div key={type.name}>\n              <p key={`${type.name}-${type.id}`}>\n                {type.name} {type.id}\n              </p>\n              <DamageRelationsView\n                type={type}\n                key={`DamageRelationView${type.name}`}\n              ></DamageRelationsView>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\n// This should be a hover view\nexport const DamageRelationsView = (props) => {\n  const type = props.type;\n  const double_from = type.damage_relations.double_damage_from.map((type) => (\n    <p key={`double_from_${type.name}`}>{type.name}</p>\n  ));\n  const double_to = type.damage_relations.double_damage_to.map((type) => (\n    <p key={`double_to_${type.name}`}>{type.name}</p>\n  ));\n  const half_from = type.damage_relations.half_damage_from.map((type) => (\n    <p key={`half_from_${type.name}`}>{type.name}</p>\n  ));\n  const half_to = type.damage_relations.half_damage_to.map((type) => (\n    <p key={`half_to_${type.name}`}>{type.name}</p>\n  ));\n  const zero_from = type.damage_relations.no_damage_from.map((type) => (\n    <p key={`zero_from_${type.name}`}>{type.name}</p>\n  ));\n  const zero_to = type.damage_relations.no_damage_to.map((type) => (\n    <p key={`zero_to_${type.name}`}>{type.name}</p>\n  ));\n\n  // TODO: don't display the empty list from above\n  return (\n    <div>\n      DOUBLE FROM: {double_from}\n      DOUBLE TO: {double_to}\n      HALF FROM: {half_from}\n      HALF TO: {half_to}\n      ZERO FROM: {zero_from}\n      ZERO TO: {zero_to}\n    </div>\n  );\n};\n","import { PokemonView } from \"./PokemonView\";\nimport { Route, Link } from \"react-router-dom\";\n\nconst PokemonList = ({ pms_detail }) => {\n  const pmList = pms_detail.map((pm) => (\n    <div className=\"pm_info\" id={`pm${pm.id}`} key={`pm${pm.id}`}>\n      <Link to={`/pokemon/${pm.id}`}>\n        <img src={pm.sprites.front_default} alt={pm.species.name}></img>\n        <p>\n          <em className=\"iconfont\">&#xe625;</em>\n          {pm.id}\n        </p>\n        <p className='capitalize'>{pm.species.name}</p>\n      </Link>\n    </div>\n  ));\n\n  return (\n    <div className=\"pokemon_list\">\n      <Route path=\"/pokemon/:pm_id\" >\n        <PokemonView pms_detail={pms_detail}></PokemonView>\n      </Route>\n      {pmList}\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import \"./App.css\";\n\nimport { useState, useEffect } from \"react\";\nimport Pokeball from \"./Components/Pokeball\";\nimport PokemonList from \"./Components/PokemonList\";\nimport apiGen from \"./Api/apiGen\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst nationalPMDexCount = 898;\n\nfunction promiseGenfetchPokemon(offset = 1, limit = nationalPMDexCount) {\n  const pmPromises = [];\n  Array.from({length: nationalPMDexCount}, (_, i) => i + offset).map((i) => \n    pmPromises.push(apiGen.getPokemonByName(i))\n  )\n  return Promise.all(pmPromises);\n}\n\nconst App = () => {\n  const [pms, setPMs] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  const getFilteredPMs = (pm_list) => {\n    return pm_list.filter((pm) =>\n      pm.species.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    async function run() {\n      let response = [];\n      try {\n        response = await promiseGenfetchPokemon();\n      } catch (e) {\n        console.error(e);\n      }\n      setPMs(response);\n    }\n    run();\n  }, []); // <-- Have to pass in [] here!\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Search Pokemon\"\n        onChange={(e) => setSearchField(e.target.value)}\n      />\n      <Router>\n        <div className=\"App\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/pokemon\">Pokemon List</Link>\n              </li>\n            </ul>\n          </nav>\n          <Pokeball />\n          <Route path=\"/(|pokemon)\">\n            <PokemonList pms_detail={getFilteredPMs(pms)}></PokemonList>\n          </Route>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}